name: Build Docker Image

on:
  push:
    branches:
      - main
    paths:
      - "linux/amd64/Dockerfile"
  repository_dispatch:
    types: [upstream-changed]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build and push
    runs-on: ubuntu-latest
    permissions:
      packages: write
    env:
      GITHUB_REPO_LOWER: ${{ github.repository }}
      GITHUB_REPO_OWNER_LOWER: ${{ github.repository_owner }}

    steps:
    - name: Set repo name to lowercase
      id: repo
      run: |
        echo "GITHUB_REPO_LOWER=$(echo ${{ env.GITHUB_REPO_LOWER }} | awk '{print tolower($0)}')" >> $GITHUB_ENV
        echo "GITHUB_REPO_OWNER_LOWER=$(echo ${{ env.GITHUB_REPO_OWNER_LOWER }} | awk '{print tolower($0)}')" >> $GITHUB_ENV

    - name: Checkout code
      uses: actions/checkout@v4

    # - name: Set up QEMU
    #   uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Get current date
      id: date
      run: echo "DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_ENV

    - name: Build and push
      uses: docker/build-push-action@v5
      env:
        DATE: ${{ env.DATE }}
      with:
          context: .
          push: true
          tags: ghcr.io/${{ env.GITHUB_REPO_OWNER_LOWER }}/azauto-common-runbook-fw:debian-12
          file: ./linux/amd64/Dockerfile
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false
          labels: |
            org.opencontainers.image.created=${{ env.DATE }}
            org.opencontainers.image.source=https://github.com/Workoho/AzAuto-Common-Runbook-FW.Docker/blob/${{ github.sha }}/linux/amd64/Dockerfile

  merge:
    name: Update :latest manifest
    needs:
        - build
    runs-on: ubuntu-latest
    permissions:
      packages: write
    env:
      GITHUB_REPO_LOWER: ${{ github.repository }}
      GITHUB_REPO_OWNER_LOWER: ${{ github.repository_owner }}

    steps:
    - name: Set repo name to lowercase
      id: repo
      run: |
        echo "GITHUB_REPO_LOWER=$(echo ${{ env.GITHUB_REPO_LOWER }} | awk '{print tolower($0)}')" >> $GITHUB_ENV
        echo "GITHUB_REPO_OWNER_LOWER=$(echo ${{ env.GITHUB_REPO_OWNER_LOWER }} | awk '{print tolower($0)}')" >> $GITHUB_ENV

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
  
    - name: Install ORAS
      run: |
        version=$(curl -sSL "https://api.github.com/repos/oras-project/oras/releases/latest" | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/')
        curl -L -o oras.tar.gz "https://github.com/oras-project/oras/releases/download/$version/oras_${version:1}_linux_amd64.tar.gz"
        tar zxf oras.tar.gz -C /usr/local/bin
        rm oras.tar.gz

    - name: Pull images
      run: |
        docker pull ghcr.io/${{ env.GITHUB_REPO_OWNER_LOWER }}/azauto-common-runbook-fw:debian-12
        docker pull ghcr.io/${{ env.GITHUB_REPO_OWNER_LOWER }}/azauto-common-runbook-fw:debian-12-arm64

    - name: Create and push manifest
      run: |
        DOCKER_CLI_EXPERIMENTAL=enabled
        echo "{
          \"schemaVersion\": 2,
          \"mediaType\": \"application/vnd.oci.image.index.v1+json\",
          \"manifests\": [
            {
              \"mediaType\": \"application/vnd.oci.image.manifest.v1+json\",
              \"digest\": \"$(docker manifest inspect ghcr.io/${{ env.GITHUB_REPO_OWNER_LOWER }}/azauto-common-runbook-fw:debian-12 | jq -r '.config.digest')\",
              \"size\": $(docker manifest inspect ghcr.io/${{ env.GITHUB_REPO_OWNER_LOWER }}/azauto-common-runbook-fw:debian-12 | jq '[.layers[].size] | add'),
              \"platform\": {
                \"architecture\": \"amd64\",
                \"os\": \"linux\"
              }
            },
            {
              \"mediaType\": \"application/vnd.oci.image.manifest.v1+json\",
              \"digest\": \"$(docker manifest inspect ghcr.io/${{ env.GITHUB_REPO_OWNER_LOWER }}/azauto-common-runbook-fw:debian-12-arm64 | jq -r '.config.digest')\",
              \"size\": $(docker manifest inspect ghcr.io/${{ env.GITHUB_REPO_OWNER_LOWER }}/azauto-common-runbook-fw:debian-12-arm64 | jq '[.layers[].size] | add'),
              \"platform\": {
                \"architecture\": \"arm64\",
                \"variant\": \"v8\",
                \"os\": \"linux\"
              }
            }
          ],
          \"annotations\": {
            \"org.opencontainers.image.description\": \"This custom Microsoft PowerShell image is provided with pre-installed PowerShell modules that enable a faster start of development containers. It is compatible for x64 and ARM64 architectures.\"
          }
        }" | docker run -i ghcr.io/oras-project/oras:main manifest push --username ${{ github.repository_owner }} --password ${{ secrets.GITHUB_TOKEN }} ghcr.io/${{ env.GITHUB_REPO_OWNER_LOWER }}/azauto-common-runbook-fw:latest -

  trigger:
    name: Trigger GitHub Codespace prebuilds
    needs:
      - merge
    runs-on: ubuntu-latest
    strategy:
      matrix:
        repo: ['Workoho/AzAuto-Common-Runbook-FW', 'Workoho/AzAuto-Project.tmpl', 'Workoho/Entra-Tiering-Security-Model']
    steps:
      - name: Trigger prebuild
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.REPO_PAT_FULL }}
          repository: ${{ matrix.repo }}
          event-type: prebuild
