name: Build Docker Image

on:
  push:
    branches:
      - main
    paths:
      - "linux/amd64/Dockerfile"
  repository_dispatch:
    types: [upstream-changed]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build and push
    runs-on: ubuntu-latest
    permissions:
      packages: write
    env:
      GITHUB_REPO_LOWER: ${{ github.repository }}
      GITHUB_REPO_OWNER_LOWER: ${{ github.repository_owner }}

    steps:
    - name: Set repo name to lowercase
      id: repo
      run: |
        echo "GITHUB_REPO_LOWER=$(echo ${{ env.GITHUB_REPO_LOWER }} | awk '{print tolower($0)}')" >> $GITHUB_ENV
        echo "GITHUB_REPO_OWNER_LOWER=$(echo ${{ env.GITHUB_REPO_OWNER_LOWER }} | awk '{print tolower($0)}')" >> $GITHUB_ENV

    - name: Checkout code
      uses: actions/checkout@v4

    # - name: Set up QEMU
    #   uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Get current date
      id: date
      run: echo "DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_ENV

    - name: Pull base image
      run: docker pull mcr.microsoft.com/powershell:debian-12

    - name: Get labels from base image
      id: base_image
      run: |
        echo "UPSTREAM_VERSION=$(docker inspect --format '{{ index .Config.Labels "org.opencontainers.image.version"}}' mcr.microsoft.com/powershell:debian-12)" >> $GITHUB_ENV
        echo "UPSTREAM_REVISION=$(docker inspect --format '{{ index .Config.Labels "org.opencontainers.image.revision"}}' mcr.microsoft.com/powershell:debian-12)" >> $GITHUB_ENV

    - name: Build and push
      uses: docker/build-push-action@v5
      env:
        DATE: ${{ env.DATE }}
        UPSTREAM_VERSION: ${{ env.UPSTREAM_VERSION }}
        UPSTREAM_REVISION: ${{ env.UPSTREAM_REVISION }}
      with:
          context: .
          push: true
          tags: ghcr.io/${{ env.GITHUB_REPO_OWNER_LOWER }}/azauto-common-runbook-fw:debian-12
          file: ./linux/amd64/Dockerfile
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false
          labels: |
            org.opencontainers.image.created=${{ env.DATE }}
            org.opencontainers.image.source="https://github.com/Workoho/AzAuto-Common-Runbook-FW.Docker/blob/${{ github.sha }}/linux/amd64/Dockerfile"
            org.opencontainers.image.version=${{ env.UPSTREAM_VERSION }}
            org.opencontainers.image.revision=${{ env.UPSTREAM_REVISION }}

  merge:
    name: Update :latest manifest
    needs:
        - build
    runs-on: ubuntu-latest
    permissions:
      packages: write
    env:
      GITHUB_REPO_LOWER: ${{ github.repository }}
      GITHUB_REPO_OWNER_LOWER: ${{ github.repository_owner }}

    steps:
    - name: Set repo name to lowercase
      id: repo
      run: |
        echo "GITHUB_REPO_LOWER=$(echo ${{ env.GITHUB_REPO_LOWER }} | awk '{print tolower($0)}')" >> $GITHUB_ENV
        echo "GITHUB_REPO_OWNER_LOWER=$(echo ${{ env.GITHUB_REPO_OWNER_LOWER }} | awk '{print tolower($0)}')" >> $GITHUB_ENV

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
  
    - name: Create and push manifest
      run: |
        docker manifest create --amend ghcr.io/${{ env.GITHUB_REPO_OWNER_LOWER }}/azauto-common-runbook-fw:latest \
          ghcr.io/${{ env.GITHUB_REPO_OWNER_LOWER }}/azauto-common-runbook-fw:debian-12 \
          ghcr.io/${{ env.GITHUB_REPO_OWNER_LOWER }}/azauto-common-runbook-fw:debian-12-arm64
        docker manifest push --purge ghcr.io/${{ env.GITHUB_REPO_OWNER_LOWER }}/azauto-common-runbook-fw:latest

  trigger:
    name: Trigger GitHub Codespace prebuilds
    needs:
      - merge
    runs-on: ubuntu-latest
    strategy:
      matrix:
        repo: ['Workoho/AzAuto-Common-Runbook-FW', 'Workoho/AzAuto-Project.tmpl', 'Workoho/Entra-Tiering-Security-Model']
    steps:
      - name: Trigger prebuild
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.REPO_PAT_FULL }}
          repository: ${{ matrix.repo }}
          event-type: prebuild
